
bin\Debug\seatbelt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  0000053e  000005d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000053e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000005d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000030  00000000  00000000  000005d5  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000608  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000648  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007d3  00000000  00000000  00000680  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006bd  00000000  00000000  00000e53  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001a2  00000000  00000000  00001510  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  000016b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000313  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000105  00000000  00000000  00001a5b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 ad 00 	call	0x15a	; 0x15a <main>
  78:	0c 94 9d 02 	jmp	0x53a	; 0x53a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ADC_init>:
#include <avr/io.h>
#include<util/delay.h>



void ADC_init(void){
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
   //this line not need we use the default AREF as reference;
  //ADMUX = (1 << REFS0);
  ADMUX = 0x00;
  88:	8c e7       	ldi	r24, 0x7C	; 124
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	fc 01       	movw	r30, r24
  8e:	10 82       	st	Z, r1
  //ADMUX &= ~(1 << MUX0);
  //10000111
  ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
  90:	8a e7       	ldi	r24, 0x7A	; 122
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	27 e8       	ldi	r18, 0x87	; 135
  96:	fc 01       	movw	r30, r24
  98:	20 83       	st	Z, r18

}
  9a:	00 00       	nop
  9c:	df 91       	pop	r29
  9e:	cf 91       	pop	r28
  a0:	08 95       	ret

000000a2 <ADC_Read>:



int ADC_Read(void){
  a2:	cf 93       	push	r28
  a4:	df 93       	push	r29
  a6:	cd b7       	in	r28, 0x3d	; 61
  a8:	de b7       	in	r29, 0x3e	; 62

  ADCSRA |= (1 << ADSC);
  aa:	8a e7       	ldi	r24, 0x7A	; 122
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	fc 01       	movw	r30, r24
  b0:	20 81       	ld	r18, Z
  b2:	8a e7       	ldi	r24, 0x7A	; 122
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	20 64       	ori	r18, 0x40	; 64
  b8:	fc 01       	movw	r30, r24
  ba:	20 83       	st	Z, r18
  while(ADCSRA & (1 << ADSC));
  bc:	00 00       	nop
  be:	8a e7       	ldi	r24, 0x7A	; 122
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	fc 01       	movw	r30, r24
  c4:	80 81       	ld	r24, Z
  c6:	88 2f       	mov	r24, r24
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	80 74       	andi	r24, 0x40	; 64
  cc:	99 27       	eor	r25, r25
  ce:	89 2b       	or	r24, r25
  d0:	b1 f7       	brne	.-20     	; 0xbe <ADC_Read+0x1c>
  return ADC;
  d2:	88 e7       	ldi	r24, 0x78	; 120
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	fc 01       	movw	r30, r24
  d8:	80 81       	ld	r24, Z
  da:	91 81       	ldd	r25, Z+1	; 0x01
}
  dc:	df 91       	pop	r29
  de:	cf 91       	pop	r28
  e0:	08 95       	ret

000000e2 <Get_Analog_Voltage>:


float Get_Analog_Voltage(int adc_value){
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
  e6:	00 d0       	rcall	.+0      	; 0xe8 <Get_Analog_Voltage+0x6>
  e8:	00 d0       	rcall	.+0      	; 0xea <Get_Analog_Voltage+0x8>
  ea:	00 d0       	rcall	.+0      	; 0xec <Get_Analog_Voltage+0xa>
  ec:	cd b7       	in	r28, 0x3d	; 61
  ee:	de b7       	in	r29, 0x3e	; 62
  f0:	9e 83       	std	Y+6, r25	; 0x06
  f2:	8d 83       	std	Y+5, r24	; 0x05

    float voltage = (adc_value * AREF) / RES;
  f4:	8d 81       	ldd	r24, Y+5	; 0x05
  f6:	9e 81       	ldd	r25, Y+6	; 0x06
  f8:	09 2e       	mov	r0, r25
  fa:	00 0c       	add	r0, r0
  fc:	aa 0b       	sbc	r26, r26
  fe:	bb 0b       	sbc	r27, r27
 100:	bc 01       	movw	r22, r24
 102:	cd 01       	movw	r24, r26
 104:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <__floatsisf>
 108:	dc 01       	movw	r26, r24
 10a:	cb 01       	movw	r24, r22
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	40 ea       	ldi	r20, 0xA0	; 160
 112:	50 e4       	ldi	r21, 0x40	; 64
 114:	bc 01       	movw	r22, r24
 116:	cd 01       	movw	r24, r26
 118:	0e 94 0c 02 	call	0x418	; 0x418 <__mulsf3>
 11c:	dc 01       	movw	r26, r24
 11e:	cb 01       	movw	r24, r22
 120:	20 e0       	ldi	r18, 0x00	; 0
 122:	30 ec       	ldi	r19, 0xC0	; 192
 124:	4f e7       	ldi	r20, 0x7F	; 127
 126:	54 e4       	ldi	r21, 0x44	; 68
 128:	bc 01       	movw	r22, r24
 12a:	cd 01       	movw	r24, r26
 12c:	0e 94 07 01 	call	0x20e	; 0x20e <__divsf3>
 130:	dc 01       	movw	r26, r24
 132:	cb 01       	movw	r24, r22
 134:	89 83       	std	Y+1, r24	; 0x01
 136:	9a 83       	std	Y+2, r25	; 0x02
 138:	ab 83       	std	Y+3, r26	; 0x03
 13a:	bc 83       	std	Y+4, r27	; 0x04
    return voltage;
 13c:	89 81       	ldd	r24, Y+1	; 0x01
 13e:	9a 81       	ldd	r25, Y+2	; 0x02
 140:	ab 81       	ldd	r26, Y+3	; 0x03
 142:	bc 81       	ldd	r27, Y+4	; 0x04

}
 144:	bc 01       	movw	r22, r24
 146:	cd 01       	movw	r24, r26
 148:	26 96       	adiw	r28, 0x06	; 6
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	f8 94       	cli
 14e:	de bf       	out	0x3e, r29	; 62
 150:	0f be       	out	0x3f, r0	; 63
 152:	cd bf       	out	0x3d, r28	; 61
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	08 95       	ret

0000015a <main>:

int main(void)
{
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	cd b7       	in	r28, 0x3d	; 61
 160:	de b7       	in	r29, 0x3e	; 62
 162:	28 97       	sbiw	r28, 0x08	; 8
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	f8 94       	cli
 168:	de bf       	out	0x3e, r29	; 62
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	cd bf       	out	0x3d, r28	; 61
    //setting the 4th pin of B as output;
    DDRB = DDRB | (1 << DDB4);
 16e:	84 e2       	ldi	r24, 0x24	; 36
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	fc 01       	movw	r30, r24
 174:	20 81       	ld	r18, Z
 176:	84 e2       	ldi	r24, 0x24	; 36
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	20 61       	ori	r18, 0x10	; 16
 17c:	fc 01       	movw	r30, r24
 17e:	20 83       	st	Z, r18
    //setting the 1st pin of C as input;
    DDRC = DDRC & ~(1 << DDC1);
 180:	87 e2       	ldi	r24, 0x27	; 39
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	fc 01       	movw	r30, r24
 186:	20 81       	ld	r18, Z
 188:	87 e2       	ldi	r24, 0x27	; 39
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	2d 7f       	andi	r18, 0xFD	; 253
 18e:	fc 01       	movw	r30, r24
 190:	20 83       	st	Z, r18

    //initalize the ADC
    ADC_init();
 192:	0e 94 40 00 	call	0x80	; 0x80 <ADC_init>


    while(1){
        //PINC0,PORTC0,DDC0
        //checking whether the PINC0 is 1
        int pc1_input = PINC & (1 << PINC1);
 196:	86 e2       	ldi	r24, 0x26	; 38
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	fc 01       	movw	r30, r24
 19c:	80 81       	ld	r24, Z
 19e:	88 2f       	mov	r24, r24
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	82 70       	andi	r24, 0x02	; 2
 1a4:	99 27       	eor	r25, r25
 1a6:	9a 83       	std	Y+2, r25	; 0x02
 1a8:	89 83       	std	Y+1, r24	; 0x01
        int adc_value = ADC_Read();
 1aa:	0e 94 51 00 	call	0xa2	; 0xa2 <ADC_Read>
 1ae:	9c 83       	std	Y+4, r25	; 0x04
 1b0:	8b 83       	std	Y+3, r24	; 0x03

         //getting the value voltage value;
        float voltage = Get_Analog_Voltage(adc_value);
 1b2:	8b 81       	ldd	r24, Y+3	; 0x03
 1b4:	9c 81       	ldd	r25, Y+4	; 0x04
 1b6:	0e 94 71 00 	call	0xe2	; 0xe2 <Get_Analog_Voltage>
 1ba:	dc 01       	movw	r26, r24
 1bc:	cb 01       	movw	r24, r22
 1be:	8d 83       	std	Y+5, r24	; 0x05
 1c0:	9e 83       	std	Y+6, r25	; 0x06
 1c2:	af 83       	std	Y+7, r26	; 0x07
 1c4:	b8 87       	std	Y+8, r27	; 0x08


        //calculating the corresponding voltage

        if(voltage >= THRESH && !(pc1_input)){
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	50 e4       	ldi	r21, 0x40	; 64
 1ce:	6d 81       	ldd	r22, Y+5	; 0x05
 1d0:	7e 81       	ldd	r23, Y+6	; 0x06
 1d2:	8f 81       	ldd	r24, Y+7	; 0x07
 1d4:	98 85       	ldd	r25, Y+8	; 0x08
 1d6:	0e 94 07 02 	call	0x40e	; 0x40e <__gesf2>
 1da:	88 23       	and	r24, r24
 1dc:	74 f0       	brlt	.+28     	; 0x1fa <main+0xa0>
 1de:	89 81       	ldd	r24, Y+1	; 0x01
 1e0:	9a 81       	ldd	r25, Y+2	; 0x02
 1e2:	89 2b       	or	r24, r25
 1e4:	51 f4       	brne	.+20     	; 0x1fa <main+0xa0>
            //setting PB4 as high
            PORTB = PORTB| (1 << PORTB4);
 1e6:	85 e2       	ldi	r24, 0x25	; 37
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	fc 01       	movw	r30, r24
 1ec:	20 81       	ld	r18, Z
 1ee:	85 e2       	ldi	r24, 0x25	; 37
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	20 61       	ori	r18, 0x10	; 16
 1f4:	fc 01       	movw	r30, r24
 1f6:	20 83       	st	Z, r18
 1f8:	09 c0       	rjmp	.+18     	; 0x20c <main+0xb2>
        }
        else{
            PORTB = PORTB& ~(1 << PORTB4);
 1fa:	85 e2       	ldi	r24, 0x25	; 37
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	fc 01       	movw	r30, r24
 200:	20 81       	ld	r18, Z
 202:	85 e2       	ldi	r24, 0x25	; 37
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	2f 7e       	andi	r18, 0xEF	; 239
 208:	fc 01       	movw	r30, r24
 20a:	20 83       	st	Z, r18

    //initalize the ADC
    ADC_init();


    while(1){
 20c:	c4 cf       	rjmp	.-120    	; 0x196 <main+0x3c>

0000020e <__divsf3>:
 20e:	0e 94 1b 01 	call	0x236	; 0x236 <__divsf3x>
 212:	0c 94 cd 01 	jmp	0x39a	; 0x39a <__fp_round>
 216:	0e 94 c6 01 	call	0x38c	; 0x38c <__fp_pscB>
 21a:	58 f0       	brcs	.+22     	; 0x232 <__divsf3+0x24>
 21c:	0e 94 bf 01 	call	0x37e	; 0x37e <__fp_pscA>
 220:	40 f0       	brcs	.+16     	; 0x232 <__divsf3+0x24>
 222:	29 f4       	brne	.+10     	; 0x22e <__divsf3+0x20>
 224:	5f 3f       	cpi	r21, 0xFF	; 255
 226:	29 f0       	breq	.+10     	; 0x232 <__divsf3+0x24>
 228:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_inf>
 22c:	51 11       	cpse	r21, r1
 22e:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_szero>
 232:	0c 94 bc 01 	jmp	0x378	; 0x378 <__fp_nan>

00000236 <__divsf3x>:
 236:	0e 94 de 01 	call	0x3bc	; 0x3bc <__fp_split3>
 23a:	68 f3       	brcs	.-38     	; 0x216 <__divsf3+0x8>

0000023c <__divsf3_pse>:
 23c:	99 23       	and	r25, r25
 23e:	b1 f3       	breq	.-20     	; 0x22c <__divsf3+0x1e>
 240:	55 23       	and	r21, r21
 242:	91 f3       	breq	.-28     	; 0x228 <__divsf3+0x1a>
 244:	95 1b       	sub	r25, r21
 246:	55 0b       	sbc	r21, r21
 248:	bb 27       	eor	r27, r27
 24a:	aa 27       	eor	r26, r26
 24c:	62 17       	cp	r22, r18
 24e:	73 07       	cpc	r23, r19
 250:	84 07       	cpc	r24, r20
 252:	38 f0       	brcs	.+14     	; 0x262 <__divsf3_pse+0x26>
 254:	9f 5f       	subi	r25, 0xFF	; 255
 256:	5f 4f       	sbci	r21, 0xFF	; 255
 258:	22 0f       	add	r18, r18
 25a:	33 1f       	adc	r19, r19
 25c:	44 1f       	adc	r20, r20
 25e:	aa 1f       	adc	r26, r26
 260:	a9 f3       	breq	.-22     	; 0x24c <__divsf3_pse+0x10>
 262:	35 d0       	rcall	.+106    	; 0x2ce <__divsf3_pse+0x92>
 264:	0e 2e       	mov	r0, r30
 266:	3a f0       	brmi	.+14     	; 0x276 <__divsf3_pse+0x3a>
 268:	e0 e8       	ldi	r30, 0x80	; 128
 26a:	32 d0       	rcall	.+100    	; 0x2d0 <__divsf3_pse+0x94>
 26c:	91 50       	subi	r25, 0x01	; 1
 26e:	50 40       	sbci	r21, 0x00	; 0
 270:	e6 95       	lsr	r30
 272:	00 1c       	adc	r0, r0
 274:	ca f7       	brpl	.-14     	; 0x268 <__divsf3_pse+0x2c>
 276:	2b d0       	rcall	.+86     	; 0x2ce <__divsf3_pse+0x92>
 278:	fe 2f       	mov	r31, r30
 27a:	29 d0       	rcall	.+82     	; 0x2ce <__divsf3_pse+0x92>
 27c:	66 0f       	add	r22, r22
 27e:	77 1f       	adc	r23, r23
 280:	88 1f       	adc	r24, r24
 282:	bb 1f       	adc	r27, r27
 284:	26 17       	cp	r18, r22
 286:	37 07       	cpc	r19, r23
 288:	48 07       	cpc	r20, r24
 28a:	ab 07       	cpc	r26, r27
 28c:	b0 e8       	ldi	r27, 0x80	; 128
 28e:	09 f0       	breq	.+2      	; 0x292 <__divsf3_pse+0x56>
 290:	bb 0b       	sbc	r27, r27
 292:	80 2d       	mov	r24, r0
 294:	bf 01       	movw	r22, r30
 296:	ff 27       	eor	r31, r31
 298:	93 58       	subi	r25, 0x83	; 131
 29a:	5f 4f       	sbci	r21, 0xFF	; 255
 29c:	3a f0       	brmi	.+14     	; 0x2ac <__divsf3_pse+0x70>
 29e:	9e 3f       	cpi	r25, 0xFE	; 254
 2a0:	51 05       	cpc	r21, r1
 2a2:	78 f0       	brcs	.+30     	; 0x2c2 <__divsf3_pse+0x86>
 2a4:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_inf>
 2a8:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_szero>
 2ac:	5f 3f       	cpi	r21, 0xFF	; 255
 2ae:	e4 f3       	brlt	.-8      	; 0x2a8 <__divsf3_pse+0x6c>
 2b0:	98 3e       	cpi	r25, 0xE8	; 232
 2b2:	d4 f3       	brlt	.-12     	; 0x2a8 <__divsf3_pse+0x6c>
 2b4:	86 95       	lsr	r24
 2b6:	77 95       	ror	r23
 2b8:	67 95       	ror	r22
 2ba:	b7 95       	ror	r27
 2bc:	f7 95       	ror	r31
 2be:	9f 5f       	subi	r25, 0xFF	; 255
 2c0:	c9 f7       	brne	.-14     	; 0x2b4 <__divsf3_pse+0x78>
 2c2:	88 0f       	add	r24, r24
 2c4:	91 1d       	adc	r25, r1
 2c6:	96 95       	lsr	r25
 2c8:	87 95       	ror	r24
 2ca:	97 f9       	bld	r25, 7
 2cc:	08 95       	ret
 2ce:	e1 e0       	ldi	r30, 0x01	; 1
 2d0:	66 0f       	add	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	88 1f       	adc	r24, r24
 2d6:	bb 1f       	adc	r27, r27
 2d8:	62 17       	cp	r22, r18
 2da:	73 07       	cpc	r23, r19
 2dc:	84 07       	cpc	r24, r20
 2de:	ba 07       	cpc	r27, r26
 2e0:	20 f0       	brcs	.+8      	; 0x2ea <__divsf3_pse+0xae>
 2e2:	62 1b       	sub	r22, r18
 2e4:	73 0b       	sbc	r23, r19
 2e6:	84 0b       	sbc	r24, r20
 2e8:	ba 0b       	sbc	r27, r26
 2ea:	ee 1f       	adc	r30, r30
 2ec:	88 f7       	brcc	.-30     	; 0x2d0 <__divsf3_pse+0x94>
 2ee:	e0 95       	com	r30
 2f0:	08 95       	ret

000002f2 <__floatunsisf>:
 2f2:	e8 94       	clt
 2f4:	09 c0       	rjmp	.+18     	; 0x308 <__floatsisf+0x12>

000002f6 <__floatsisf>:
 2f6:	97 fb       	bst	r25, 7
 2f8:	3e f4       	brtc	.+14     	; 0x308 <__floatsisf+0x12>
 2fa:	90 95       	com	r25
 2fc:	80 95       	com	r24
 2fe:	70 95       	com	r23
 300:	61 95       	neg	r22
 302:	7f 4f       	sbci	r23, 0xFF	; 255
 304:	8f 4f       	sbci	r24, 0xFF	; 255
 306:	9f 4f       	sbci	r25, 0xFF	; 255
 308:	99 23       	and	r25, r25
 30a:	a9 f0       	breq	.+42     	; 0x336 <__floatsisf+0x40>
 30c:	f9 2f       	mov	r31, r25
 30e:	96 e9       	ldi	r25, 0x96	; 150
 310:	bb 27       	eor	r27, r27
 312:	93 95       	inc	r25
 314:	f6 95       	lsr	r31
 316:	87 95       	ror	r24
 318:	77 95       	ror	r23
 31a:	67 95       	ror	r22
 31c:	b7 95       	ror	r27
 31e:	f1 11       	cpse	r31, r1
 320:	f8 cf       	rjmp	.-16     	; 0x312 <__floatsisf+0x1c>
 322:	fa f4       	brpl	.+62     	; 0x362 <__floatsisf+0x6c>
 324:	bb 0f       	add	r27, r27
 326:	11 f4       	brne	.+4      	; 0x32c <__floatsisf+0x36>
 328:	60 ff       	sbrs	r22, 0
 32a:	1b c0       	rjmp	.+54     	; 0x362 <__floatsisf+0x6c>
 32c:	6f 5f       	subi	r22, 0xFF	; 255
 32e:	7f 4f       	sbci	r23, 0xFF	; 255
 330:	8f 4f       	sbci	r24, 0xFF	; 255
 332:	9f 4f       	sbci	r25, 0xFF	; 255
 334:	16 c0       	rjmp	.+44     	; 0x362 <__floatsisf+0x6c>
 336:	88 23       	and	r24, r24
 338:	11 f0       	breq	.+4      	; 0x33e <__floatsisf+0x48>
 33a:	96 e9       	ldi	r25, 0x96	; 150
 33c:	11 c0       	rjmp	.+34     	; 0x360 <__floatsisf+0x6a>
 33e:	77 23       	and	r23, r23
 340:	21 f0       	breq	.+8      	; 0x34a <__floatsisf+0x54>
 342:	9e e8       	ldi	r25, 0x8E	; 142
 344:	87 2f       	mov	r24, r23
 346:	76 2f       	mov	r23, r22
 348:	05 c0       	rjmp	.+10     	; 0x354 <__floatsisf+0x5e>
 34a:	66 23       	and	r22, r22
 34c:	71 f0       	breq	.+28     	; 0x36a <__floatsisf+0x74>
 34e:	96 e8       	ldi	r25, 0x86	; 134
 350:	86 2f       	mov	r24, r22
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	60 e0       	ldi	r22, 0x00	; 0
 356:	2a f0       	brmi	.+10     	; 0x362 <__floatsisf+0x6c>
 358:	9a 95       	dec	r25
 35a:	66 0f       	add	r22, r22
 35c:	77 1f       	adc	r23, r23
 35e:	88 1f       	adc	r24, r24
 360:	da f7       	brpl	.-10     	; 0x358 <__floatsisf+0x62>
 362:	88 0f       	add	r24, r24
 364:	96 95       	lsr	r25
 366:	87 95       	ror	r24
 368:	97 f9       	bld	r25, 7
 36a:	08 95       	ret

0000036c <__fp_inf>:
 36c:	97 f9       	bld	r25, 7
 36e:	9f 67       	ori	r25, 0x7F	; 127
 370:	80 e8       	ldi	r24, 0x80	; 128
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	60 e0       	ldi	r22, 0x00	; 0
 376:	08 95       	ret

00000378 <__fp_nan>:
 378:	9f ef       	ldi	r25, 0xFF	; 255
 37a:	80 ec       	ldi	r24, 0xC0	; 192
 37c:	08 95       	ret

0000037e <__fp_pscA>:
 37e:	00 24       	eor	r0, r0
 380:	0a 94       	dec	r0
 382:	16 16       	cp	r1, r22
 384:	17 06       	cpc	r1, r23
 386:	18 06       	cpc	r1, r24
 388:	09 06       	cpc	r0, r25
 38a:	08 95       	ret

0000038c <__fp_pscB>:
 38c:	00 24       	eor	r0, r0
 38e:	0a 94       	dec	r0
 390:	12 16       	cp	r1, r18
 392:	13 06       	cpc	r1, r19
 394:	14 06       	cpc	r1, r20
 396:	05 06       	cpc	r0, r21
 398:	08 95       	ret

0000039a <__fp_round>:
 39a:	09 2e       	mov	r0, r25
 39c:	03 94       	inc	r0
 39e:	00 0c       	add	r0, r0
 3a0:	11 f4       	brne	.+4      	; 0x3a6 <__fp_round+0xc>
 3a2:	88 23       	and	r24, r24
 3a4:	52 f0       	brmi	.+20     	; 0x3ba <__fp_round+0x20>
 3a6:	bb 0f       	add	r27, r27
 3a8:	40 f4       	brcc	.+16     	; 0x3ba <__fp_round+0x20>
 3aa:	bf 2b       	or	r27, r31
 3ac:	11 f4       	brne	.+4      	; 0x3b2 <__fp_round+0x18>
 3ae:	60 ff       	sbrs	r22, 0
 3b0:	04 c0       	rjmp	.+8      	; 0x3ba <__fp_round+0x20>
 3b2:	6f 5f       	subi	r22, 0xFF	; 255
 3b4:	7f 4f       	sbci	r23, 0xFF	; 255
 3b6:	8f 4f       	sbci	r24, 0xFF	; 255
 3b8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ba:	08 95       	ret

000003bc <__fp_split3>:
 3bc:	57 fd       	sbrc	r21, 7
 3be:	90 58       	subi	r25, 0x80	; 128
 3c0:	44 0f       	add	r20, r20
 3c2:	55 1f       	adc	r21, r21
 3c4:	59 f0       	breq	.+22     	; 0x3dc <__fp_splitA+0x10>
 3c6:	5f 3f       	cpi	r21, 0xFF	; 255
 3c8:	71 f0       	breq	.+28     	; 0x3e6 <__fp_splitA+0x1a>
 3ca:	47 95       	ror	r20

000003cc <__fp_splitA>:
 3cc:	88 0f       	add	r24, r24
 3ce:	97 fb       	bst	r25, 7
 3d0:	99 1f       	adc	r25, r25
 3d2:	61 f0       	breq	.+24     	; 0x3ec <__fp_splitA+0x20>
 3d4:	9f 3f       	cpi	r25, 0xFF	; 255
 3d6:	79 f0       	breq	.+30     	; 0x3f6 <__fp_splitA+0x2a>
 3d8:	87 95       	ror	r24
 3da:	08 95       	ret
 3dc:	12 16       	cp	r1, r18
 3de:	13 06       	cpc	r1, r19
 3e0:	14 06       	cpc	r1, r20
 3e2:	55 1f       	adc	r21, r21
 3e4:	f2 cf       	rjmp	.-28     	; 0x3ca <__fp_split3+0xe>
 3e6:	46 95       	lsr	r20
 3e8:	f1 df       	rcall	.-30     	; 0x3cc <__fp_splitA>
 3ea:	08 c0       	rjmp	.+16     	; 0x3fc <__fp_splitA+0x30>
 3ec:	16 16       	cp	r1, r22
 3ee:	17 06       	cpc	r1, r23
 3f0:	18 06       	cpc	r1, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	f1 cf       	rjmp	.-30     	; 0x3d8 <__fp_splitA+0xc>
 3f6:	86 95       	lsr	r24
 3f8:	71 05       	cpc	r23, r1
 3fa:	61 05       	cpc	r22, r1
 3fc:	08 94       	sec
 3fe:	08 95       	ret

00000400 <__fp_zero>:
 400:	e8 94       	clt

00000402 <__fp_szero>:
 402:	bb 27       	eor	r27, r27
 404:	66 27       	eor	r22, r22
 406:	77 27       	eor	r23, r23
 408:	cb 01       	movw	r24, r22
 40a:	97 f9       	bld	r25, 7
 40c:	08 95       	ret

0000040e <__gesf2>:
 40e:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__fp_cmp>
 412:	08 f4       	brcc	.+2      	; 0x416 <__gesf2+0x8>
 414:	8f ef       	ldi	r24, 0xFF	; 255
 416:	08 95       	ret

00000418 <__mulsf3>:
 418:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3x>
 41c:	0c 94 cd 01 	jmp	0x39a	; 0x39a <__fp_round>
 420:	0e 94 bf 01 	call	0x37e	; 0x37e <__fp_pscA>
 424:	38 f0       	brcs	.+14     	; 0x434 <__mulsf3+0x1c>
 426:	0e 94 c6 01 	call	0x38c	; 0x38c <__fp_pscB>
 42a:	20 f0       	brcs	.+8      	; 0x434 <__mulsf3+0x1c>
 42c:	95 23       	and	r25, r21
 42e:	11 f0       	breq	.+4      	; 0x434 <__mulsf3+0x1c>
 430:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_inf>
 434:	0c 94 bc 01 	jmp	0x378	; 0x378 <__fp_nan>
 438:	11 24       	eor	r1, r1
 43a:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_szero>

0000043e <__mulsf3x>:
 43e:	0e 94 de 01 	call	0x3bc	; 0x3bc <__fp_split3>
 442:	70 f3       	brcs	.-36     	; 0x420 <__mulsf3+0x8>

00000444 <__mulsf3_pse>:
 444:	95 9f       	mul	r25, r21
 446:	c1 f3       	breq	.-16     	; 0x438 <__mulsf3+0x20>
 448:	95 0f       	add	r25, r21
 44a:	50 e0       	ldi	r21, 0x00	; 0
 44c:	55 1f       	adc	r21, r21
 44e:	62 9f       	mul	r22, r18
 450:	f0 01       	movw	r30, r0
 452:	72 9f       	mul	r23, r18
 454:	bb 27       	eor	r27, r27
 456:	f0 0d       	add	r31, r0
 458:	b1 1d       	adc	r27, r1
 45a:	63 9f       	mul	r22, r19
 45c:	aa 27       	eor	r26, r26
 45e:	f0 0d       	add	r31, r0
 460:	b1 1d       	adc	r27, r1
 462:	aa 1f       	adc	r26, r26
 464:	64 9f       	mul	r22, r20
 466:	66 27       	eor	r22, r22
 468:	b0 0d       	add	r27, r0
 46a:	a1 1d       	adc	r26, r1
 46c:	66 1f       	adc	r22, r22
 46e:	82 9f       	mul	r24, r18
 470:	22 27       	eor	r18, r18
 472:	b0 0d       	add	r27, r0
 474:	a1 1d       	adc	r26, r1
 476:	62 1f       	adc	r22, r18
 478:	73 9f       	mul	r23, r19
 47a:	b0 0d       	add	r27, r0
 47c:	a1 1d       	adc	r26, r1
 47e:	62 1f       	adc	r22, r18
 480:	83 9f       	mul	r24, r19
 482:	a0 0d       	add	r26, r0
 484:	61 1d       	adc	r22, r1
 486:	22 1f       	adc	r18, r18
 488:	74 9f       	mul	r23, r20
 48a:	33 27       	eor	r19, r19
 48c:	a0 0d       	add	r26, r0
 48e:	61 1d       	adc	r22, r1
 490:	23 1f       	adc	r18, r19
 492:	84 9f       	mul	r24, r20
 494:	60 0d       	add	r22, r0
 496:	21 1d       	adc	r18, r1
 498:	82 2f       	mov	r24, r18
 49a:	76 2f       	mov	r23, r22
 49c:	6a 2f       	mov	r22, r26
 49e:	11 24       	eor	r1, r1
 4a0:	9f 57       	subi	r25, 0x7F	; 127
 4a2:	50 40       	sbci	r21, 0x00	; 0
 4a4:	9a f0       	brmi	.+38     	; 0x4cc <__mulsf3_pse+0x88>
 4a6:	f1 f0       	breq	.+60     	; 0x4e4 <__mulsf3_pse+0xa0>
 4a8:	88 23       	and	r24, r24
 4aa:	4a f0       	brmi	.+18     	; 0x4be <__mulsf3_pse+0x7a>
 4ac:	ee 0f       	add	r30, r30
 4ae:	ff 1f       	adc	r31, r31
 4b0:	bb 1f       	adc	r27, r27
 4b2:	66 1f       	adc	r22, r22
 4b4:	77 1f       	adc	r23, r23
 4b6:	88 1f       	adc	r24, r24
 4b8:	91 50       	subi	r25, 0x01	; 1
 4ba:	50 40       	sbci	r21, 0x00	; 0
 4bc:	a9 f7       	brne	.-22     	; 0x4a8 <__mulsf3_pse+0x64>
 4be:	9e 3f       	cpi	r25, 0xFE	; 254
 4c0:	51 05       	cpc	r21, r1
 4c2:	80 f0       	brcs	.+32     	; 0x4e4 <__mulsf3_pse+0xa0>
 4c4:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_inf>
 4c8:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_szero>
 4cc:	5f 3f       	cpi	r21, 0xFF	; 255
 4ce:	e4 f3       	brlt	.-8      	; 0x4c8 <__mulsf3_pse+0x84>
 4d0:	98 3e       	cpi	r25, 0xE8	; 232
 4d2:	d4 f3       	brlt	.-12     	; 0x4c8 <__mulsf3_pse+0x84>
 4d4:	86 95       	lsr	r24
 4d6:	77 95       	ror	r23
 4d8:	67 95       	ror	r22
 4da:	b7 95       	ror	r27
 4dc:	f7 95       	ror	r31
 4de:	e7 95       	ror	r30
 4e0:	9f 5f       	subi	r25, 0xFF	; 255
 4e2:	c1 f7       	brne	.-16     	; 0x4d4 <__mulsf3_pse+0x90>
 4e4:	fe 2b       	or	r31, r30
 4e6:	88 0f       	add	r24, r24
 4e8:	91 1d       	adc	r25, r1
 4ea:	96 95       	lsr	r25
 4ec:	87 95       	ror	r24
 4ee:	97 f9       	bld	r25, 7
 4f0:	08 95       	ret

000004f2 <__fp_cmp>:
 4f2:	99 0f       	add	r25, r25
 4f4:	00 08       	sbc	r0, r0
 4f6:	55 0f       	add	r21, r21
 4f8:	aa 0b       	sbc	r26, r26
 4fa:	e0 e8       	ldi	r30, 0x80	; 128
 4fc:	fe ef       	ldi	r31, 0xFE	; 254
 4fe:	16 16       	cp	r1, r22
 500:	17 06       	cpc	r1, r23
 502:	e8 07       	cpc	r30, r24
 504:	f9 07       	cpc	r31, r25
 506:	c0 f0       	brcs	.+48     	; 0x538 <__fp_cmp+0x46>
 508:	12 16       	cp	r1, r18
 50a:	13 06       	cpc	r1, r19
 50c:	e4 07       	cpc	r30, r20
 50e:	f5 07       	cpc	r31, r21
 510:	98 f0       	brcs	.+38     	; 0x538 <__fp_cmp+0x46>
 512:	62 1b       	sub	r22, r18
 514:	73 0b       	sbc	r23, r19
 516:	84 0b       	sbc	r24, r20
 518:	95 0b       	sbc	r25, r21
 51a:	39 f4       	brne	.+14     	; 0x52a <__fp_cmp+0x38>
 51c:	0a 26       	eor	r0, r26
 51e:	61 f0       	breq	.+24     	; 0x538 <__fp_cmp+0x46>
 520:	23 2b       	or	r18, r19
 522:	24 2b       	or	r18, r20
 524:	25 2b       	or	r18, r21
 526:	21 f4       	brne	.+8      	; 0x530 <__fp_cmp+0x3e>
 528:	08 95       	ret
 52a:	0a 26       	eor	r0, r26
 52c:	09 f4       	brne	.+2      	; 0x530 <__fp_cmp+0x3e>
 52e:	a1 40       	sbci	r26, 0x01	; 1
 530:	a6 95       	lsr	r26
 532:	8f ef       	ldi	r24, 0xFF	; 255
 534:	81 1d       	adc	r24, r1
 536:	81 1d       	adc	r24, r1
 538:	08 95       	ret

0000053a <_exit>:
 53a:	f8 94       	cli

0000053c <__stop_program>:
 53c:	ff cf       	rjmp	.-2      	; 0x53c <__stop_program>
